name: CI
on:
  push:
    branches:
      - 'master'
    tags: [ 'v*' ]
  pull_request:
    branches:
      - 'master'
  schedule:
    - cron:  '0 6 * * *'  # Daily 6AM UTC build

jobs:
  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkhout
        uses: actions/checkout@v2
      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.9-${{ hashFiles('requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: python -m pip install -r requirements/doc.txt
      - run: make -C docs html SPHINXOPTS="-W -E"
  flake:
    name: Flake8
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkhout
        uses: actions/checkout@v2
      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.9-${{ hashFiles('requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: python -m pip install -r requirements/ci.txt
      - run: flake8
  test:
    name: Test
    needs: flake
    runs-on: ubuntu-latest
    strategy:
      matrix:
         pyver: ['3.6', '3.7', '3.8', '3.9', '3.10']
      fail-fast: true
    steps:
      - name: Checkhout
        uses: actions/checkout@v2.4.0
      - name: Setup Python ${{ matrix.pyver }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyver }}
      - name: Cache PyPI
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.pyver }}-${{ hashFiles('requirements/*.txt') }}
          restore-keys: |
              ${{ runner.os }}-pip-${{ matrix.pyver }}-
      - name: Install dependencies
        run: python -m pip install -r requirements/ci.txt
      - name: Run tests
        env:
          PYTHONPATH: .
        run: pytest --cov-branch --cov=aiojobs --cov-report=term tests
